name: ci-cd

on:
  push:
    branches:
      - 'main'
      
env:
  DOCKER_REPOSITORY: grumbeard/devtools-test-1
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY: devtools-test-1
  ECS_SERVICE: api-service-container-test-1
  ECS_TASK_DEFINITION_FAMILY: api-service-test-1
  ECS_TASK_DEFINITION: ./.aws/task-definition.json
  CONTAINER_NAME: api-service-container-test-1

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.DOCKER_REPOSITORY }}:latest
          
  deploy:
    runs-on: ubuntu-latest
    needs: [docker]
    environment: development
    steps:
      - uses: actions/checkout@v2
      - 
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      -
        name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      -
        name: Pull, tag, and push image to Amazon ECR
        id: push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Pull image from DockerHub, tag, push to ECR
          docker pull $DOCKER_REPOSITORY:latest
          docker tag $DOCKER_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      -
        name: Get task definition data
        id: task-def-data
        run: |
          aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION_FAMILY --query taskDefinition > $ECS_TASK_DEFINITION
      -
        name: Fill in new image ID in Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-data.outputs.taskDefinition }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.push-image.outputs.image }}
      -
        name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          wait-for-service-stability: true
